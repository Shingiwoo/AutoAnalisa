services:
  db:
    image: mysql:8.0
    restart: always
    command: ["mysqld", "--default-authentication-plugin=mysql_native_password"]
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: autoanalisa
      MYSQL_USER: gitci88
      MYSQL_PASSWORD: "AutoPass#88"
    volumes:
      - db_data:/var/lib/mysql
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -uroot -p$$MYSQL_ROOT_PASSWORD || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    restart: always
    env_file:
      - .env
    environment:
      # Force container DB/Redis endpoints
      DATABASE_URL: "mysql+aiomysql://gitci88:AutoPass%2388@db:3306/autoanalisa"
      REDIS_URL: redis://host.docker.internal:6379/0
      APP_ENV: prod
      CORS_ORIGINS: https://webanalisa.appshin.xyz
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8940:8000"
    working_dir: /app
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test:
        - CMD
        - python
        - -c
        - "import json,urllib.request,sys; sys.exit(0) if json.loads(urllib.request.urlopen('http://localhost:8000/api/health', timeout=5).read().decode()).get('ok') else sys.exit(1)"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    restart: always
    environment:
      NEXT_PUBLIC_API_BASE: https://webanalisa.appshin.xyz/api
      NODE_ENV: production
    depends_on:
      backend:
        condition: service_healthy
    ports:
      - "3840:3000"
    healthcheck:
      test:
        - CMD
        - node
        - -e
        - "fetch('http://localhost:3000/').then(r=>process.exit(r.ok?0:1)).catch(()=>process.exit(1))"
      interval: 15s
      timeout: 5s
      retries: 10
      start_period: 15s

  job-futures-refresh:
    build:
      context: .
      dockerfile: backend/Dockerfile
    restart: always
    env_file:
      - .env
    environment:
      DATABASE_URL: "mysql+aiomysql://gitci88:AutoPass%2388@db:3306/autoanalisa"
      REDIS_URL: redis://host.docker.internal:6379/0
      APP_ENV: prod
    depends_on:
      db:
        condition: service_healthy
      backend:
        condition: service_healthy
    command: sh -c "while true; do python scripts/futures_refresh.py || true; sleep 120; done"
    extra_hosts:
      - "host.docker.internal:host-gateway"

  job-macro-generate:
    build:
      context: .
      dockerfile: backend/Dockerfile
    restart: always
    env_file:
      - .env
    environment:
      DATABASE_URL: "mysql+aiomysql://gitci88:AutoPass%2388@db:3306/autoanalisa"
      REDIS_URL: redis://host.docker.internal:6379/0
      APP_ENV: prod
    depends_on:
      db:
        condition: service_healthy
      backend:
        condition: service_healthy
    command: sh -c "while true; do python scripts/macro_generate.py --slot pagi || true; sleep 43200; done"
    extra_hosts:
      - "host.docker.internal:host-gateway"

volumes:
  db_data:
