services:
  db:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpass8888
      MYSQL_DATABASE: autoanalisa
      MYSQL_USER: auto
      MYSQL_PASSWORD: autopass8888
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql

  redis:
    image: redis:7-alpine
    restart: always
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    restart: always
    env_file:
      - .env
    environment:
      # Force container DB/Redis endpoints
      DATABASE_URL: mysql+aiomysql://auto:autopass@db:3306/autoanalisa
      REDIS_URL: redis://redis:6379/0
      APP_ENV: prod
    depends_on:
      - db
      - redis
    ports:
      - "8940:8000"
    working_dir: /app

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    restart: always
    environment:
      NEXT_PUBLIC_API_BASE: http://localhost:8940
      NODE_ENV: production
    depends_on:
      - backend
    ports:
      - "3840:3000"

  job-futures-refresh:
    build:
      context: .
      dockerfile: backend/Dockerfile
    restart: always
    env_file:
      - .env
    environment:
      DATABASE_URL: mysql+aiomysql://auto:autopass@db:3306/autoanalisa
      REDIS_URL: redis://redis:6379/0
      APP_ENV: prod
    depends_on:
      - db
      - redis
    command: sh -c "while true; do python scripts/futures_refresh.py || true; sleep 120; done"

  job-macro-generate:
    build:
      context: .
      dockerfile: backend/Dockerfile
    restart: always
    env_file:
      - .env
    environment:
      DATABASE_URL: mysql+aiomysql://auto:autopass@db:3306/autoanalisa
      REDIS_URL: redis://redis:6379/0
      APP_ENV: prod
    depends_on:
      - db
      - redis
    command: sh -c "while true; do python scripts/macro_generate.py --slot pagi || true; sleep 43200; done"

volumes:
  db_data:
  redis_data:
